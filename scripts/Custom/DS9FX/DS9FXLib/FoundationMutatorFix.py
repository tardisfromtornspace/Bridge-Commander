"""
This now can be automated, if the user wishes so...
by USS Sovereign
"""

# Imports
import nt
import Foundation
from Custom import FoundationConfig 
from Custom.DS9FX.DS9FXLib.Backups import bFoundationConfig

# File Paths
sBackup = "scripts\\Custom\\DS9FX\\DS9FXLib\\Backups\\bFoundationConfig.py"
sFdtnPath = "scripts\\Custom\\FoundationConfig.py"

# Load current foundation config
def LoadFoundationConfig():
    
    sConfig = FoundationConfig.lActiveMutators

    return sConfig

# Load backup config
def LoadBackupConfig():

    sConfig = bFoundationConfig.lActiveMutators

    return sConfig

# Save backup
def SaveBackup(bSilent = 0):
    sConfig = LoadFoundationConfig()

    file = nt.open(sBackup, nt.O_WRONLY|nt.O_TRUNC|nt.O_CREAT)
    nt.write(file, "##### Generated by DS9FX\n##### Backup Foundation Mutator Copy\n##### Do not modify unless you know what you're doing\n\nlActiveMutators = " + str(sConfig))
    nt.close(file)

    if bSilent == 1:
        print 'DS9FX: Foundation Mutator Backup Enabled... First Run Backing Complete'
    
    reload(bFoundationConfig)

# Now restore foundation mutator settings
def RestoreFoundationSettings(bSilent = 1):
    sConfig = LoadBackupConfig()

    file = nt.open(sFdtnPath, nt.O_WRONLY|nt.O_TRUNC|nt.O_CREAT)
    nt.write(file, "lActiveMutators = " + str(sConfig))
    nt.close(file)
    
    reload(FoundationConfig)

    if bSilent == 1:
        # Let people know that we restored proper settings now
        print 'DS9FX: Interacting With Foundation... Restoring Backup Mutator Settings'

    # Simply now interact with the Foundation and let it do it's thing
    Foundation.LoadConfig()
    
    
    

{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f65\froman\fcharset238\fprq2 Times New Roman CE;}{\f66\froman\fcharset204\fprq2 Times New Roman Cyr;}
{\f68\froman\fcharset161\fprq2 Times New Roman Greek;}{\f69\froman\fcharset162\fprq2 Times New Roman Tur;}{\f70\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f71\froman\fcharset178\fprq2 Times New Roman (Arabic);}
{\f72\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f73\fswiss\fcharset238\fprq2 Arial CE;}{\f74\fswiss\fcharset204\fprq2 Arial Cyr;}{\f76\fswiss\fcharset161\fprq2 Arial Greek;}{\f77\fswiss\fcharset162\fprq2 Arial Tur;}
{\f78\fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f79\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f80\fswiss\fcharset186\fprq2 Arial Baltic;}{\f81\fmodern\fcharset238\fprq1 Courier New CE;}{\f82\fmodern\fcharset204\fprq1 Courier New Cyr;}
{\f84\fmodern\fcharset161\fprq1 Courier New Greek;}{\f85\fmodern\fcharset162\fprq1 Courier New Tur;}{\f86\fmodern\fcharset177\fprq1 Courier New (Hebrew);}{\f87\fmodern\fcharset178\fprq1 Courier New (Arabic);}
{\f88\fmodern\fcharset186\fprq1 Courier New Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \snext0 Normal;}{\s1\ql \li1440\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin1440\itap0 
\b\fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext0 heading 1;}{\s3\ql \li0\ri0\sb240\sa60\keepn\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\f1\fs26\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 
\sbasedon0 \snext0 heading 3;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 
\fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext16 Body Text 2;}{\s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 \sbasedon0 \snext17 
Body Text;}{\*\cs18 \additive \i \sbasedon10 Emphasis;}{\*\cs19 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}}{\info{\title Foundation Tech 20050703}{\author MLeoDaalder}{\operator MLeoDaalder}{\creatim\yr2005\mo7\dy3\hr20\min21}
{\revtim\yr2005\mo7\dy13\hr18\min29}{\version349}{\edmins864}{\nofpages15}{\nofwords3703}{\nofchars21108}{\*\company M-Ware}{\nofcharsws0}{\vern8269}}\paperw11906\paperh16838 
\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1800\dgvorigin1440\dghshow1\dgvshow1
\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule \fet0\sectd \linex0\headery708\footery708\colsx708\endnhere\sectlinegrid360\sectdefaultcl 
{\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5
\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang
{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
Foundation Technologies 20050703
\par 
\par Finished by: MLeo Daalder
\par Originally by: Dasher
\par 
\par 
\par 0. Contents:\line 1. What does this mod do\line 2. Requirements
\par 3. Installation
\par 4. Included in this package
\par 5. Credits
\par 6. How to use
\par 6.1 How to add a Technology to a ship
\par 6.2 How to add a Technology to a projectile
\par 6.3 Where to install a new Technology
\par 6.4 How to create Technology X
\par 6.6 How to use Disablers in code
\par 7. How to use the standard technologies
\par 7.1 Ablative Armour
\par 7.2 Multivectral Shielding
\par 7.3 Regenerative Shielding
\par 7.4 Reflector Shielding (aka Corbonite Shields)
\par 7.5 Immunity (for disablers)
\par 7.6 Breen Damper (aka Breen Drainer Weapon)
\par 7.7 Cloak Disruptor
\par 7.8 Disablers
\par 7.9 Splitting Projectiles
\par 8. How to use second party technologies
\par 8.1 Phase Cloak
\par 8.2 Phased Torpedoes
\par 8.3 Isokinetic Torpedoes
\par 
\par 
\par 1. What does this mod do?
\par 
\par Foundation Technologies (aka FTech) is designed to revolutionise the way scripters and ship modders can add (new) technologies to BC (and it\rquote s ships).
\par It provides scripters with the basic structures to create new things of which you only need a couple of things to add and you have a new technology and it allows an easy setup for loading your new technology into BC.
\par And it provides ship modders an easy way to include technologies to their ships.
\par More on these things later.
\par It also incorporates Inaccurate Phasers for as well the torpedoes and pulse weapons and for non-player ship.
\par In the standard package there will be several technologies included of which you will be familiar through ATP.
\par FTech is more or less designed to be \'93the next level\'94 for ATP. But all the technologies are plugins.
\par 
\par 2. Requirements:\line \tab The Foundation (get it with BCMP or BCMI).
\par \tab }{\lang1033\langfe1033\langnp1033 Patch is optional.
\par }{
\par 
\par 3. Installation:\line \tab Unzip the contents of the zip to your Bridge Commander directory.
\par \tab And make sure the contents of the scripts directory (from inside the zip) 
\par \tab comes in BC\rquote s script directory.
\par \tab And not to forget, make sure that the directory structure stays preserved.
\par 
\par \tab And don\rquote t forget that you need to activate the }{\lang1033\langfe1033\langnp1033 mutator}{!
\par 
\par \line 4. Included in this package:
\par \tab Foundation Triggers (by Dasher).
\par \tab Foundation Technologies version 20050703
\par \tab Standard Technologies:
\par \tab \tab Ablative Armour
\par \tab \tab Multivectral Shielding
\par \tab \tab Regenerative Shielding
\par \tab \tab Reflector Shielding (aka Corbonite Shields)
\par \tab \tab Immunity (for disablers)
\par \tab \tab Disablers:
\par \tab \tab \tab Power Disabler
\par \tab \tab \tab Sensor Disabler
\par \tab \tab \tab Warp Disabler
\par \tab \tab \tab Impulse Disabler
\par \tab \tab \tab Shield Disabler
\par \tab \tab \tab Cloak Disabler
\par \tab \tab \tab Multiple Disabler
\par \tab \tab \tab Random Disabler
\par \tab \tab Timed/Splitting Projectiles:
\par \tab \tab \tab Splitting Single Target
\par \tab \tab \tab Splitting Multiple Target
\par \tab \tab \tab Cloak Disruptor
\par \tab \tab Projectiles:
\par \tab \tab \tab Breen Damper
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {Second Party Add-ons (developed by me (MLeo) during development of FTech):
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\tab \tab Phase Cloak
\par \tab \tab Phased Torpedoes
\par \tab \tab Isokinetic Torpedoes (from the S4 voyager episode Retrospect)
\par 
\par 
\par 5. Credits:
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {Dasher for his Foundation, which makes Modding not a pain in the neck for
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {BC. And for allowing me to finish this great and revolutionary mod!
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\tab We are sorry to see you go.
\par \page Apollo for ATP (FTech could be considered the next evolution of ATP, and 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {many technologies }{\lang1033\langfe1033\langnp1033 pioneered}{ by Apollo are included in this).
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {Sneaker for his Inaccurate Phasers (which Dasher originally adapted for FTech 
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {and I adapted to include non-players).
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\tab Defiant for lot's of testing and many suggestions.
\par 
\par \tab }{\lang1043\langfe1033\langnp1043 Beta testers:
\par \tab \tab Defiant,
\par \tab \tab }{Mark (Ignis),
\par \tab \tab Darkthunder (also thanks for making a start writing down how to use 
\par \tab \tab various parts!)
\par \tab \tab The other people who have tested this and whom I have (shamefully) 
\par \tab \tab forgotten.
\par \tab \tab You know who you are you have deepest gratitude for helping this out!
\par 
\par 
\par 6. How to use:
\par \tab First of all, any questions can be send to }{\field{\*\fldinst { HYPERLINK "mailto:MLeoDaalder@netscape.net" }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000017000000190000004d004c0065006f004400610061006c0064006500720040006e0065007400730063006100700065002e006e00650074000000e0c9ea79f9bace118c8200aa004ba90b400000006d00610069006c0074006f003a004d004c0065006f00440061006100
6c0064006500720040006e0065007400730063006100700065002e006e006500740000000000000000000000000000}}}{\fldrslt {\cs15\ul\cf2 MLeoDaalder@netscape.net}}}{.
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {Second, all code in this document is in Courier New size 10.\line Because consistent indentation (so don\rquote t mix up 1, 2, 3 or a tab char in the same file) I
\rquote ve done it so that all the code is indented from the beginning of the file, so you could just copy the lines of a code and paste them on a line.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par \tab 6.1 How to add a technology to a ship:
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
First thing to know is that FTech uses the ships plugin to determine which technologies a ship uses. This also ensures that if the end user doesn\rquote t has FTech, so that he or she won\rquote t be experiencing any negative effects from u
sing ships that have Technologies attached to them.
\par }\pard\plain \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
\par So we add a dTechs part to the ship plugin.
\par Open the ship plugin and look for a line with Foundation.ShipDef. (note the dot at the end).
\par Copy that part plus the part before the first space and paste it to the next line. This part is also known as the \'93ShipDef line of a ship\'94.\line Then add \'93.dTechs = \{\}\'94 behind it (with out the \'93\'94).
\par 
\par Any tech you may want to add to the ship will be defined between the \'93\{\'94 and the \'93\}\'94.
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {The structure between those the brackets, is like this:
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 \'94Technology Name\'94: Any value specified by the tech,}{ 
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {The amount of times you can do that is only limited by the amount of memory in your computer (though there is no reason to overdo it).
\par I will be referring to this as the Tech Key later in the document.
\par 
\par The \'93Technology Name\'94 and \'93Any value specified by the tech\'94 are specific for the Technology you are adding to the ship. Consult their readme\rquote 
s and documentation for more information on those (consult this document for the technologies mentioned above).
\par 
\par If you want to add a technology to a stock ship, you are going to need to look in StaticDefs.py and copy the right ShipDef line to another file with as top \'93import Foundation\'94 (no \'93\'94
). You can place the file in Autoload or in Ships. Suggested is that you put it in Autoload so it won\rquote t get disabled the next time you start up BCMP.
\par 
\par A note of interest, FTech is designed so that if it can\rquote t find the tech as listed in the Ship\rquote s plugin file it will give a warning in the console, but it will not impa
ir the ability to use BC or the ship. You will simply not be using the Technology.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par \tab 6.2 How to add a Technology to a projectile:
\par \tab \tab Currently one can only add 1 \'93on fire\'94 and 1 \'93on yield\'94 technology to \tab \tab a projectile.
\par \tab \tab The process is the same for Torpedoes and Pulse weapons.
\par \tab \tab Both use the fire sound to determine what to use.
\par 
\par \tab \tab Normally a modder adds this to the bottom of his/her projectiles script:
\par \line }{\f2\fs20 sYieldName = ''
\par sFireName = ''
\par 
\par try:
\par \tab import FoundationTech
\par \tab import \'93Path to script\'94
\par 
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab oFire = \'93Path to script\'94.\'94Name\'94('Name to describe projectile tech', \{
Any Technology specific configuration\})
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 \tab FoundationTech.dOnFires[__name__] = oFire
\par \tab FoundationTech.dYields[__name__] = oFire
\par except:
\par \tab pass
\par }{
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {But I hope it\rquote s going to be a 
standard (and I actively urge modders to do so!) to include an example on how to add a projectile technology correctly. I have included examples on the standard projectile technologies.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par \tab 6.3 Where to install a new Technology:
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {For this purpose (and to keep Autoload a bit cleaner) I\rquote 
ve created a new directory called Techs in Custom, if you place those there, then the technologies will get loaded into the system from there.
\par 
\par So unless specified by the readme of the Technology you are trying to install you can usually put the file in Techs.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par \tab 6.4 How to create Technology X:
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {Well, it all depends on what you want X to do (I really mean this, lots of things I\rquote 
m going to tell really depend on what you may want it to do so things are or aren\rquote t needed for what you want it to do).
\par And there isn\rquote t 1 good answer; there are more than a dozen good answers to fit the idea of what Technology X should/must do.
\par It usually helps to look at the standard techs that have been supplied with this package. If you really can\rquote t find it, contact me and I\rquote ll see if I can find it. And if you\rquote 
re a first time scripter, you really ought to know how to use the Console, you\rquote re going to need it (even the non first time scripters need it).
\par \line But this is how it\rquote s generally done:\line You start with importing 2 files, App and FoundationTech and of course any other files you may need.
\par 
\par Then you have to create a class that inherits from a \'93super\'94 class called TechDef. This class can be found in FoundationTech.\line So your class definition line may look like this:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {class TechXDef(FoundationTech.TechDef):
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {
The name is arbitrary as long as it uses any letter (abc) number or _ sign and it starts with a letter or the _ sign a class (or function or variable) name may _not_ start with a number.
\par 
\par I won\rquote t bother you with explaining the concept of the so-called Object Oriented programming features we are using here, apart that it\rquote 
s a way to use a basic class with all the things you need for a Technology without the need to reinvent the wheel over and over again and it allows you to change the parts that you don\rquote 
t like or you can add parts that you may like to be included without overwriting the super (or base) class.
\par 
\par For projectile-based technologies you usually provide your own
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab def OnFire(self, pEvent, pTorp):
\par }\pard\plain \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {and
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab def OnYield(self, pShip, pInstance, pEvent, pTorp):
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab \tab functions based on what you need.
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {The OnFire function is called when a projectile is launched and OnYield is called when a projectile hit\rquote s something.
\par 
\par Here\rquote s a run down on what the parameters do:\line self is the Object itself, pEvent is the event generated by BC and pTorp is the torpedo in question.
\par 
\par In those functions you put the code that needs to be run for whatever you want it to do.
\par 
\par For non-projectile based technologies there are some more things that you need to do.\line First of all, you need to \'93attach\'94 your Technology to the ships instance. 
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
Luckily for you, TechDef already has a function for this and it attaches itself to a variable called lTechs by default. So if you aren\rquote t going to use the technology to defend your ship against attacks then you aren\rquote 
t going to be needed to create the following 2 functions:
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab 
\par }\pard \s17\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\page def Attach(self, pInstance):
\par }\pard \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\tab def Detach(self, pInstance):
\par }\pard\plain \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {Those 2 functions attach and remove itself from the lTechs list in pInstance (pInstance is }{
\lang1033\langfe1033\langnp1033 FTechs representation of a ship).
\par }{
\par If you are going to react to phasers, pulse weapons, torpedoes or tractor beams you are going to need to override that. But the 
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 pInstance.lTechs.append(self)
\par }\pard\plain \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {part must be there in the Attach function.
\par And:
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 pInstance.lTechs.remove(self)
\par }\pard\plain \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {part must be in the Detach function.
\par 
\par I\rquote ll give you the variables you can use:\line Phasers: lBeamDefense
\par Torpedoes: lTorpDefense
\par Pulse: lPulseDefense
\par Tractor Beam: lTractorDefense
\par 
\par So if you want your tech to respond to a Phaser blast, you need to add to the Attach function:\line }{\f2\fs20 pInstance.lBeamDefense.append(self)}{\fs20 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\tab \tab And to the Detach function:\line }{\fs20 \tab \tab }{\f2\fs20 pInstance.lBeamDefense.remove(self)}{\fs20 \line }{\tab \tab 
\par \tab \tab So it can look like this:\line }{\f2\fs20 \tab def Attach(self, pInstance):
\par \tab \tab pInstance.lTechs.append(self)
\par \tab \tab pInstance.lBeamDefense.append(self)
\par }{\f2 
\par }{\f2\fs20 \tab def Detach(self, pInstance):
\par \tab \tab pInstance.lTechs.remove(self)\line \tab \tab pInstance.lBeamDefense.remove(self)
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {But for each defense list you add the tech to, you will have to give another function. Namely the function FTech calls when a certain event happens.
\par 
\par I\rquote ll give you the required functions here:
\par Phasers:
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab def OnBeamDefense(self, pShip, pInstance, oYield, pEvent):
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab \tab Torpedoes:
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab def OnTorpDefense(self, pShip, pInstance, oYield, pEvent):
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab \tab Pulse:
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab def OnPulseDefense(self, pShip, pInstance, oYield, pEvent):
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab \tab Tractor beam:
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab def OnTractorDefense(self, pShip, pInstance, oYield, pEvent):
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {If any of those functions returns not 0 then th
e loop, which goes through all the attached technologies (there can be any number of techs attached to a ship), will be broken. The event will be considered \'93handled\'94.
\par 
\par Of course, you can make a Tech act to multiple events (Ablative Armour is one of them).
\par 
\par Sometimes you also need to get some information about systems on a ship (or even change things on a ship).
\par For this is purpose, you can overwrite the following functions:
\par }\pard\plain \s17\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f2\fs20\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab def AttachShip(self, pShip, pInstance):
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 \tab def DetachShip(self, pShip, pInstance):
\par }{
\par \tab 6.5 How to use Disablers in code
\par \tab \tab Disablers are most known for the Torpedoes that can disable systems.\line \tab \tab But scripters can use disablers without the need to spawn a torpedo.
\par 
\par \tab \tab The process of doing this is easy.
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {First of all, the scripter must get the instance of the ship of which the scripter wants to disable a system.
\par 
\par This is done with the following code:\line }{\f2\fs20 pInstance = None
\par if FoundationTech.dShips.has_key(\'93Name of Ship\'94):
\par \tab pInstance = FoundationTech.dShips[\'93Name of Ship\'94]
\par else:
\par \tab # Error code here\'85
\par \tab return}{
\par 
\par Here \'93Name of ship\'94 is the of course the ship you want to disable a system on.
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {And where you see # Error code here\'85 you can put any code you want for handling if there isn
\rquote t an instance (for whatever reason, it shouldn\rquote t happen but it is possible), like a print statement to the console. Of course the return isn\rquote t needed, but then you would need to check if pInstance isn\rquote t None.
\par }\pard\plain \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
\par Ounce you have a valid pInstance (so it isn\rquote t None), you can use it for your needs. In this case, to disable a system.
\par 
\par Then you get the system from the ship you want to disable.\line Say you want to disable the shields of a ship.
\par You\rquote d do the following:\line }{\f2\fs20 pInstance.Disable(pShip, pShip.GetShields(), TimeToDisable, bForce)}{
\par 
\par pShip is the ship itself, you will have to see how you get it.
\par pShip.GetShields() speaks for itself I think, it gets the shields of a ship.
\par You can look in App.py under class ShipClass for more of those functions to get systems.
\par TimeToDisable is a number in seconds that you want the system to be disabled.
\par bForce is an optional parameter, which you don\rquote t have to include.
\par By default it\rquote s 0, but if you set it to non-zero then the code will skip the Disabler Immunity part (so it will force the system to be disabled).
\par 
\par If you (or something else) also disables the same system later on, then the longest duration will be taken.
\par 
\par There also is a function to disable all subsystems of a particular \'93parent\'94 system (like the Phaser System, it has multiple Phaser banks).
\par This function is \'93DisableSubSys\'94 and it works exactly the same as Disable.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par 
\par 7. How to use the standard technologies:
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {For all the ship based technologies I suggest you read 6.1 of this document first.
\par For all projectile-based technologies I suggest you read 6.2 of this document first.
\par 
\par Make sure you understand it before continuing.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {7.1 Ablative Armour
\par \tab The Ablative Armour protects your ship until the armour is destroyed.
\par 
\par \tab The Ablative Armours Technology Name is: \'93Ablative Armour\'94.
\par \tab The configuration is the number of hit points the armour has.
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {It isn\rquote 
t needed for the ship to have a non-primary hull property (optionally target table and critical), though if you want the health bar to display the status of the Armour, you will need a hull property called \'93Ablative Armour\'94 and with the same
 amount of hit points you define in the dTechs key.
\par 
\par Your dTechs key for this tech could be something like this:\line }{\f2\fs20 \'93Ablative Armour\'94: 6000, }{
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
\par \'93Ablative Armour\'94 is the default name for the hull property, if you want to give a different name to it, you can do that by adding \'93[\'94 and \'93]\'94 around the amount, and adding a new name behind it.\line 
Your dTechs key will look something like this then:\line }{\f2\fs20 \'93Ablative Armour\'94: [6000, \'93Hull Plating\'94],}{\f2  }{
\par }\pard\plain \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\tab 
\par 
\par 7.2 Multivectral Shielding
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {Multivectral Shielding makes all your shield vector
s work as 1 shield emitter. So damage is distributed across all sides (it is advised that you give each part the same maximum charge and recharge rate).
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {The Multivectral Shielding Technology Name is: 
\par \'93Multivectral Shields\'94.
\par The configuration is the percent chance that it the technology will succeed.
\par 
\par Your dTechs key for this tech could look like this:\line }{\f2\fs20 \'93Multivectral Shields\'94: 50, }{\fs20 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par 7.3 Regenerative Shielding
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {Regenerative Shielding sends some of the damage done to your shields back into your shields. So it uses part of the damage to reinforce it self.
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par \tab The Regenerative Shielding Technology Name is:\line \tab \tab \'93Regenerative Shields\'94.
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {The configuration is a number of which the damage done to the shield is divided by (so don\rquote t make it 0).
\par 
\par Your dTechs key for this tech could be like this:\line }{\f2\fs20 \'93Regenerative Shields\'94: 10, }{\fs20 
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par 7.4 Reflector Shielding (aka Corbonite Shields)
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {Reflector Shielding will send torpedoes back where they came and pulse weapons flying.
\par But reflecting puts a mild strain on your shields. Which is 10% of the damage done by the torpedo or pulse weapon.
\par 
\par The Reflector Shielding Technology Name is:\line \'93Reflector Shields\'94.
\par The configuration is the percent chance that the projectile will get deflected. 
\par 
\par Your dTechs key could look like this:\line }{\f2\fs20 \'93Reflector Shields\'94: 75,}{
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par 7.5 Immunity (for disablers)
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {FTech allows scripters to easily disable a subsystem on a ship for a specified time without all the hassle of keeping track of everything yourself.
\par And of course, one can make a ship immune for a certain disabler.\line One can even specify how much disabling a system can take.
\par 
\par The Technology Name for this is: \'93Disable Immunity\'94.
\par The configuration is a dictionary (a structure like the dTechs like structure with the \'93\{\'94 and \'93\}\'94 sign) containing the systems the ship has a certain level of immunity for.
\par 
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {So your dTechs key could look like this:
\par }\pard\plain \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 \'93Disable Immunity\'94: \{Immunities\}
\par }{
\par Where Immunities is one (or more) of the following:
\par }{\f2\fs20 \'93Power\'94:\tab MaxTimePrevented
\par \'93Sensor\'94:\tab MaxTimePrevented
\par \'93Cloak\'94:\tab MaxTimePrevented
\par \'93Shield\'94:\tab MaxTimePrevented
\par \'93Warp\'94:\tab MaxTimePrevented
\par \'93Impulse\'94:\tab MaxTimePrevented
\par \'93Phaser\'94:\tab MaxTimePrevented
\par \'93Torpedo\'94:\tab MaxTimePrevented
\par \'93Pulse\'94:\tab MaxTimePrevented
\par }{where MaxTimePrevented is a time in seconds that is the maximum amount of time the ship can prevent from getting disabled, anything larger, and it will be disabled for the remaining amount of time.
\par 
\par A ship can have multiple immunities (and different maximum time per immunity) they are added by appending a "," between 2 immunities (without the " signs)
\par It becomes like this (just an example):
\par }{\f2\fs20 \'93Disable Immunity\'94: \{\'93Power\'94: 15, \'93Warp\'94: 1, \'93Cloak\'94: 10\}
\par }{As you can see, order doesn't matter.
\par 
\par When MaxTimePrevented is 0 then disablement will always be prevented.
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par \tab 7.6 Breen Damper (aka Breen Drainer Weapon)
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {The Breen Damper is projectile technology.
\par It will disable the power producing systems, shields and cloaking device on impact.\line It also has an immunity tech (separate from 7.5 because it\rquote s a different system of disabling).
\par 
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {
You can add the Breen Damper to your projectile by adding the following code to the bottom of your projectile script:
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\line }{\f2\fs20 sYieldName = \lquote Damper Weapon\rquote 
\par sFireName = None
\par 
\par try:
\par \tab import FoundationTech
\par \tab try:
\par \tab \tab oFire = FoundationTech.oTechs[sFireName]
\par \tab \tab FoundationTech.dOnFires[__name__] = oFire
\par \tab except:
\par \tab \tab pass
\par 
\par \tab try:
\par \tab \tab oYield = FoundationTech.oTechs[sYieldName]
\par \tab \tab FoundationTech.dYields[__name__] = oYield
\par \tab except:
\par \tab \tab pass
\par except:
\par \tab pass
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {
\par The Damper Immunity Technology Name is: \'93Drainer Immune\'94.
\par The configuration is not used so just a 0 or 1 (I admit I prefer 1, it\rquote s more natural to put it there than 0, which could suggest that it wouldn\rquote t be immune) is all that is needed.
\par 
\par Your dTechs key could look like this:
\par }{\f2\fs20 \'93Drainer Immune\'94: 1, 
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par \tab 7.7 Cloak Disruptor
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {
The cloak disruptor allows you to disable the cloaking devices of cloaked ships (both enemy and friendly) in the area (in a range of a 1000 game units from the projectile position) by firing a projectile. It will begin disruption after 1 second in flight.

\par It is possible that a projectile can do multiple bursts.
\par 
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {There is nothing configure about this, so I\rquote ll just give you the example:
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 
\par try:
\par }\pard \ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 import FoundationTech
\par import ftb.Tech.CloakDisruptor
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 
\par }\pard \ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs20 oFire = ftb.Tech.CloakDisruptor.CloakDisruptor('Cloak Disruptor', \{\})
\par }\pard\plain \s1\ql \fi720\li0\ri0\keepn\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0 \b\fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\b0\f2\fs20 FoundationTech.dOnFires[__name__] = oFire}{\b0 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 except:
\par \tab pass
\par }{
\par \tab 7.8 Disablers
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {
Disablers are technologies that can disable systems for a specified amount of time. The disablers I mention here are using the Disablers I mentioned at 6.5 and are Projectile based systems.
\par 
\par There are multiple predefined disablers for this already for you to use (you can of course configure or even create one yourself).
\par }\pard \ql \fi720\li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {This is the basic structure for adding a Disabler to a projectile:
\par }\pard \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par }{\f2\fs20 sYieldName = \lquote Disabler Name\rquote 
\par sFireName = None
\par 
\par try:
\par \tab import FoundationTech
\par \tab try:
\par \tab \tab oFire = FoundationTech.oTechs[sFireName]
\par \tab \tab FoundationTech.dOnFires[__name__] = oFire
\par \tab except:
\par \tab \tab pass
\par 
\par \tab try:
\par \tab \tab oYield = FoundationTech.oTechs[sYieldName]
\par \tab \tab FoundationTech.dYields[__name__] = oYield
\par \tab except:
\par \tab \tab pass
\par except:
\par \tab pass
\par }\pard \ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {
\par \lquote Disabler Name\rquote  is of course the technology name.
\par Here are a couple of predefine ones:\line }{\f2\fs20 \lquote Power Disable\rquote 
\par \lquote Sensor Disable\rquote 
\par \lquote Warp Disable\rquote 
\par \lquote Impulse Disable\rquote 
\par \lquote Shield Disable\rquote 
\par \lquote Cloak Disable\rquote 
\par \lquote Multiple Disable\rquote 
\par \lquote Random Disable\rquote }{
\par }\pard\plain \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {They all disable systems for 10 seconds.
\par 
\par Multiple Disable disables Shields and Sensors for 10 seconds each.
\par Random Disable randomly picks systems to disable for 10 seconds.
\par The systems it tries to disable are:\line Sensors\tab (20% chance)
\par Warp\tab \tab (20% chance)
\par Impulse\tab (20% chance)
\par Shields\tab \tab (20% chance)\line Cloak\tab \tab (10% chance)
\par Power\tab \tab (10% chance)
\par 
\par You can of course, configure the predefined technologies.\line The basic structure changes a little bit because you need to import and create a new instance of one of the predefined disablers.
\par 
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 try:
\par \tab import FoundationTech
\par \tab from ftb.Tech.DisablerYields import *
\par \tab try:
\par \tab \tab oYield = ClassName(\lquote New Name\rquote , \{Configuration\})
\par \tab \tab FoundationTech.dYields[__name__] = oYield
\par \tab except:
\par \tab \tab pass
\par except:
\par }\pard\plain \s16\ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 pass}{
\par }\pard \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {
\par Here ClassName is one of the following:\line PowerDisableDef
\par SensorDisableDef
\par WarpDisableDef
\par ImpulseDisableDef
\par ShieldDisableDef
\par CloakDisableDef
\par MultipleDisableDef
\par RandomDisableDef
\par 
\par You will have to specify a new unique name for \lquote New Name\rquote .\line Configuration is in the following form for all technologies (apart for MultipleDisableDef and RandomDisableDef):\line }{\f2\fs20 \{\lquote tDisable\rquote : time\}}{
\par Here time is the time in seconds you want the system (I think the names of the classes speak for themselves) to be disabled.
\par 
\par Here is the configuration for MultipleDisableDef:\line }{\f2\fs20 \{\lquote lYields\rquote :
\par }\pard \s16\ql \fi720\li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f2\fs20 (Disabler, time), 
\par (Another Disabler, time))
\par }\pard \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f2\fs20 \}}{
\par 
\par Time is the same as always, but you can define different times for each disabler.
\par Disabler and Another Disabler can be one of the following:
\par }{\f2\fs20 \page oPowerDisable
\par oSensorDisable
\par oWarpDisable
\par oImpulseDisable
\par oShieldDisable
\par oCloakDisable
\par oMultipleDisable
\par oRandomDisable}{
\par 
\par }\pard \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\tab \tab These are all the predefined Disablers (so they have the same effect as \tab \tab I mentioned before). Naturally, you can enter your own.
\par 
\par }\pard \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {And not to forget, you can add as many disablers to a MultipleDisableDef, separate them (as seen in the example) with a \lquote ,\rquote .
\par 
\par And here is the configuration for RandomDisableDef:
\par }{\f2\fs20 \{\lquote lYields\rquote :
\par }\pard \s16\ql \fi720\li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f2\fs20 (Disabler, time, chance), 
\par (Another Disabler, time, chance))
\par }\pard \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {\f2\fs20 \}
\par }{
\par As you can see it\rquote s the same as MultipleDisableDef apart for that you can specify the chance.
\par 
\par }\pard \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\tab 7.9 Splitting Projectiles
\par \tab \tab There are 2 types of splitting projectiles, single target and multi target.
\par \tab \tab Single target splitting projectiles split and converge at the same target.
\par }\pard \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {Multi target splitting projectiles split and pick their own (enemy) targets. And both do this after 100 game units distance from the parent ship.
\par 
\par With splitting torpedoes it\rquote s important that you have 2 projectiles.
\par 1 is the \'93shell\'94 and the other the \'93warhead\'94.\line The shell is what gets fired from the ship. The warhead is what comes out of the shell. So it\rquote s important that the warhead and the shell aren\rquote 
t the same, or you would get infinite (well until BC can\rquote t handle it anymore) torpedoes on the screen. This is something you don\rquote t want to be happening.\line \line It is of course all right to have multiple stage cluster pro
jectiles, just try and prevent a loop of any sort with these.
\par 
\par And here is the example for a Single Target Splitting Projectile:
\par }\pard \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 sYieldName = \lquote \rquote 
\par try:
\par }\pard \s16\ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 import FoundationTech
\par import ftb.Tech.TimedTorpedoes
\par }\pard \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 
\par }\pard \s16\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\f2\fs20 oFire = ftb.Tech.TimedTorpedoes.MIRVSingleTargetTorpedo(
\par \lquote Name for tech\rquote , \{
\par }\pard \s16\ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 \tab \lquote spreadNumber\rquote :\tab 3,
\par \tab \lquote spreadDensity\rquote : \tab 6.5,
\par \tab \lquote warheadModule\rquote : \tab \lquote PathToModule\rquote ,
\par \tab \lquote shellLive\rquote :\tab 0,
\par \})
\par FoundationTech.dOnFires[__name__] = oFire
\par }\pard \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\f2\fs20 \tab oYield = FoundationTech.oTechs[sYieldName]
\par \tab FoundationTech.dYields[__name__] = oYield
\par except:
\par \tab pass}{
\par }\pard \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {
\par And here is a quick rundown. Name for Tech is the name you give to this configuration.
\par spreadNumber is the amount of warheads the projectile will fire.
\par spreadDensity is the distance between 2 warheads when they spread out from the shell (after which they will converge on their target). It\rquote s defined in degree.
\par warheadModule is the path to the new projectile that is to be spawned (same structure of path as with the projectiles with the torpedoes in the Hardpoint of a ship).
\par 
\par Multiple Target Splitting Projectiles are done the same way.\line With 1 difference, \lquote MIRVSingleTargetTorpedo\rquote  will be: \lquote MIRVMultiTargetTorpedo\rquote .
\par }\pard \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par 8. How to use Second Party technologies
\par \tab This of course doesn\rquote t differ from using standard technologies.
\par }\pard \s16\ql \li720\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {I do implore that you read the readme\rquote s supplied with the technologies with great care.
\par \line And I really implore scripters to include readme\rquote s with their technologies.
\par 
\par 8.1 Phase Cloak
\par }\pard \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {The Phase Cloak allows ships to
 pass through other ships and stations without causing collisions (weapons will hit you). Planets and suns are too heavy to pass through (and is rather boring, it\rquote s an empty shell, I can know it, I\rquote ve been there).
\par 
\par The Phase Cloak Technology Name is: \'93Phase Cloak\'94.
\par The configuration is a number that defines the amount of time (in seconds) that the cloak will be disabled for when hit by a weapon.
\par 
\par If you put as configuration 0 then it will never be disabled.
\par 
\par Your dTechs key could look like this:\line }{\f2\fs20 \'93Phase Cloak\'94: 3,
\par }{
\par }\pard \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\tab 8.2 Phased Torpedoes
\par }\pard \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {Phased Torpedoes (or Projectiles) will go right through the shields of a ship and collide with the ship itself. So it won\rquote t do hull damage.
\par 
\par This mod is created so that it will add the Phased Plasma from Episode 7 and 8 from the Single Player are added without further configuration.
\par 
\par Here is how you add it to your projectile:
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 \page try:
\par \tab sYieldName = \lquote Phased Torpedo\rquote 
\par \tab import FoundationTech
\par \tab try:
\par \tab \tab oYield = FoundationTech.oTechs[sYieldName]
\par \tab \tab FoundationTech.dYields[__name__] = oYield
\par \tab except:
\par \tab \tab pass
\par except:
\par }\pard\plain \s16\ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 pass}{
\par }\pard \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par }\pard \s16\ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {8.3 Isokinetic Torpedoes
\par }\pard \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {These are the projectiles from the Voyager Season 4 episode Retrospect. They are so damaging that they continue even after the shields have collapsed.
\par 
\par (A note for scripters: Yes, this is a failed Phased Torpedo script. }{{\field{\*\fldinst SYMBOL 74 \\f "Wingdings" \\s 12}{\fldrslt\f14\fs24}}}{)
\par 
\par Here is how you add it to your projectiles:
\par }\pard\plain \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 try:
\par \tab sYieldName = \lquote Isokinetic Cannon Round\rquote 
\par \tab import FoundationTech
\par \tab try:
\par \tab \tab oYield = FoundationTech.oTechs[sYieldName]
\par \tab \tab FoundationTech.dYields[__name__] = oYield
\par \tab except:
\par \tab \tab pass
\par except:
\par }\pard\plain \s16\ql \fi720\li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang2057\langfe1033\cgrid\langnp2057\langfenp1033 {\f2\fs20 pass}{
\par }\pard \s16\ql \li1440\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin1440\itap0 {
\par And a note, there have been bugs encountered with this script.\line Random torpedoes flying after the shields have collapsed.
\par }\pard \s16\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {
\par 
\par 
\par 
\par 
\par Thank you for reading this readme and how to guide to Foundation Tech!
\par Any questions can be send to }{\field{\*\fldinst { HYPERLINK "mailto:MLeoDaalder@netscape.net" }{{\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000017000000190000004d004c0065006f004400610061006c0064006500720040006e0065007400730063006100700065002e006e00650074000000e0c9ea79f9bace118c8200aa004ba90b400000006d00610069006c0074006f003a004d004c0065006f00440061006100
6c0064006500720040006e0065007400730063006100700065002e006e0065007400000000000000000000}}}{\fldrslt {\cs15\ul\cf2 MLeoDaalder@netscape.net}}}{
\par Or contact me through PM on Bridge Commander Universe.
\par }}